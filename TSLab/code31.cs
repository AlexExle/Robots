//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.1
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSLab.User
{
    using System;
    using TSLab.Script;
    
    
    public sealed class Script
    {
        
        private TSLab.Script.Handlers.Compress Сжать_h = new TSLab.Script.Handlers.Compress();
        
        private TSLab.Script.Handlers.Decompres Закрытие_5_минут_h = new TSLab.Script.Handlers.Decompres();
        
        private TSLab.Script.Handlers.Close Закрытие1_h = new TSLab.Script.Handlers.Close();
        
        private TSLab.Script.Handlers.Decompres ЕМА_5_минут_h = new TSLab.Script.Handlers.Decompres();
        
        private TSLab.Script.Handlers.EMA EMA_h = new TSLab.Script.Handlers.EMA();
        
        private TSLab.Script.Handlers.CrossOver ПересеСверху_h = new TSLab.Script.Handlers.CrossOver();
        
        private TSLab.Script.Handlers.CrossUnder ПересеСнизу_h = new TSLab.Script.Handlers.CrossUnder();
        
        private TSLab.Script.Handlers.TrailStop ТрейлСтоп_h = new TSLab.Script.Handlers.TrailStop();
        
        private TSLab.Script.Handlers.TrailStop ТрейлСтоп1_h = new TSLab.Script.Handlers.TrailStop();
        
        public void Execute(TSLab.Script.Handlers.IContext context, TSLab.Script.ISecurity Источник1)
        {
            // Initialize 'Сжать' item
            this.Сжать_h.Interval = 300;
            this.Сжать_h.Shift = 0;
            // Make 'Сжать' item data
            TSLab.Script.ISecurity Сжать;
            try
            {
                Сжать = this.Сжать_h.Execute(Источник1);
            }
            catch (System.ArgumentOutOfRangeException )
            {
                throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'Сжать\'. Индекс за пределам диапазона.");
            }
            // Initialize 'Закрытие1' item
            this.Закрытие1_h.Context = context;
            // Make 'Закрытие1' item data
            System.Collections.Generic.IList<double> Закрытие1 = context.GetData("Закрытие1", new string[] {
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                "Сжать"
            }, delegate {
                try {
                    return this.Закрытие1_h.Execute(Сжать);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'Закрытие1\'. Индекс за пределам диапазона.");
                }

            });
            // Initialize 'Закрытие_5_минут' item
            this.Закрытие_5_минут_h.Method = TSLab.DataSource.DecompressMethodWithDef.Default;
            // Make 'Закрытие_5_минут' item data
            System.Collections.Generic.IList<double> Закрытие_5_минут = context.GetData("Закрытие_5_минут", new string[] {
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Закрытие_5_минут_h.Method.ToString(), 
                "Источник1"
            }, delegate {
                try {
                    return this.Закрытие_5_минут_h.Execute(Сжать, Закрытие1);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'Закрытие_5_минут\'. Индекс за пределам диапазона.");
                }

            });
            // Initialize 'EMA' item
            this.EMA_h.Context = context;
            this.EMA_h.Period = 21;
            // Make 'EMA' item data
            System.Collections.Generic.IList<double> EMA = context.GetData("EMA", new string[] {
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.EMA_h.Period.ToString(), 
                "Сжать"
            }, delegate {
                try {
                    return this.EMA_h.Execute(Закрытие1);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'EMA\'. Индекс за пределам диапазона.");
                }

            });
            // Initialize 'ЕМА_5_минут' item
            this.ЕМА_5_минут_h.Method = TSLab.DataSource.DecompressMethodWithDef.Default;
            // Make 'ЕМА_5_минут' item data
            System.Collections.Generic.IList<double> ЕМА_5_минут = context.GetData("ЕМА_5_минут", new string[] {
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.EMA_h.Period.ToString(), 
                this.ЕМА_5_минут_h.Method.ToString(), 
                "Источник1"
            }, delegate {
                try {
                    return this.ЕМА_5_минут_h.Execute(Сжать, EMA);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'ЕМА_5_минут\'. Индекс за пределам диапазона.");
                }

            });
            // Initialize 'ПересеСверху' item
            this.ПересеСверху_h.Context = context;
            // Make 'ПересеСверху' item data
            System.Collections.Generic.IList<bool> ПересеСверху = context.GetData("ПересеСверху", new string[] {
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.EMA_h.Period.ToString(), 
                this.ЕМА_5_минут_h.Method.ToString(), 
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Закрытие_5_минут_h.Method.ToString(), 
                "Источник1"
            }, delegate {
                try {
                    return this.ПересеСверху_h.Execute(ЕМА_5_минут, Закрытие_5_минут);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'ПересеСверху\'. Индекс за пределам диапазона.");
                }

            });
            // Initialize 'ПересеСнизу' item
            this.ПересеСнизу_h.Context = context;
            // Make 'ПересеСнизу' item data
            System.Collections.Generic.IList<bool> ПересеСнизу = context.GetData("ПересеСнизу", new string[] {
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.EMA_h.Period.ToString(), 
                this.ЕМА_5_минут_h.Method.ToString(), 
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Сжать_h.Interval.ToString(), 
                this.Сжать_h.Shift.ToString(), 
                this.Закрытие_5_минут_h.Method.ToString(), 
                "Источник1"
            }, delegate {
                try {
                    return this.ПересеСнизу_h.Execute(ЕМА_5_минут, Закрытие_5_минут);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'ПересеСнизу\'. Индекс за пределам диапазона.");
                }

            });
            TSLab.Script.IPosition Покупка;
            // Initialize 'ТрейлСтоп' item
            this.ТрейлСтоп_h.StopLoss = 0.1D;
            this.ТрейлСтоп_h.TrailEnable = 0.1D;
            this.ТрейлСтоп_h.TrailLoss = 0.1D;
            this.ТрейлСтоп_h.UseCalcPrice = false;
            double ТрейлСтоп = 0;
            TSLab.Script.IPosition Продажа;
            // Initialize 'ТрейлСтоп1' item
            this.ТрейлСтоп1_h.StopLoss = 0.1D;
            this.ТрейлСтоп1_h.TrailEnable = 0.1D;
            this.ТрейлСтоп1_h.TrailLoss = 0.1D;
            this.ТрейлСтоп1_h.UseCalcPrice = false;
            double ТрейлСтоп1 = 0;
            // =================================================
            // Panels
            // =================================================
            // Make 'Главное' pane
            TSLab.Script.IPane Главное_pane = context.CreatePane("Главное", 70D, false);
            Главное_pane.Visible = true;
            // =================================================
            // Handlers
            // =================================================
            // =================================================
            // Trading
            // =================================================
            int barsCount = Источник1.Bars.Count;
            if ((context.IsLastBarUsed == false))
            {
                barsCount--;
            }
            for (int i = 0; (i < barsCount); i++)
            {
                Покупка = Источник1.Positions.GetLastActiveForSignal("Покупка", i);
                Продажа = Источник1.Positions.GetLastActiveForSignal("Продажа", i);
                try
                {
                    ТрейлСтоп = this.ТрейлСтоп_h.Execute(Покупка, i);
                }
                catch (System.ArgumentOutOfRangeException )
                {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'ТрейлСтоп\'. Индекс за пределам диапазона.");
                }
                if ((Покупка == null))
                {
                    if (ПересеСнизу[i])
                    {
                        if ((context.TradeFromBar <= i))
                        {
                            Источник1.Positions.BuyAtMarket(i+1, 1D, "Покупка");
                        }
                    }
                }
                else
                {
                    if ((Покупка.EntryBarNum <= i))
                    {
                        Покупка.CloseAtStop(i+1, ТрейлСтоп, "СТоп_покупка");
                    }
                }
                try
                {
                    ТрейлСтоп1 = this.ТрейлСтоп1_h.Execute(Продажа, i);
                }
                catch (System.ArgumentOutOfRangeException )
                {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'ТрейлСтоп1\'. Индекс за пределам диапазона.");
                }
                if ((Продажа == null))
                {
                    if (ПересеСверху[i])
                    {
                        if ((context.TradeFromBar <= i))
                        {
                            Источник1.Positions.SellAtMarket(i+1, 1D, "Продажа");
                        }
                    }
                }
                else
                {
                    if ((Продажа.EntryBarNum <= i))
                    {
                        Продажа.CloseAtStop(i+1, ТрейлСтоп1, "Стоп_ продажа");
                    }
                }
            }
            // =================================================
            // Charts
            // =================================================
            // Make 'Закрытие_5_минут' chart
            TSLab.Script.IGraphList Главное_pane_Закрытие_5_минут_chart = Главное_pane.AddList(((("Закрытие_5_минут" 
                            + (" (" + this.Закрытие_5_минут_h.Method)) 
                            + ")") 
                            + (" [" 
                            + (Источник1.Symbol + "]"))), Закрытие_5_минут, TSLab.Script.ListStyles.LINE, 196865, TSLab.Script.LineStyles.SOLID, TSLab.Script.PaneSides.RIGHT);
            Главное_pane.UpdatePrecision(TSLab.Script.PaneSides.RIGHT, Источник1.Decimals);
            // Make 'Источник1' chart
            TSLab.Script.IGraphList Главное_pane_Источник1_chart = Главное_pane.AddList(("Источник1" 
                            + (" [" 
                            + (Источник1.Symbol + "]"))), Источник1, TSLab.Script.CandleStyles.BAR_CANDLE, true, true, true, true, 4605513, TSLab.Script.PaneSides.RIGHT);
            Источник1.ConnectSecurityList(Главное_pane_Источник1_chart);
            Главное_pane.UpdatePrecision(TSLab.Script.PaneSides.RIGHT, Источник1.Decimals);
            // Make 'ЕМА_5_минут' chart
            TSLab.Script.IGraphList Главное_pane_ЕМА_5_минут_chart = Главное_pane.AddList(((("ЕМА_5_минут" 
                            + (" (" + this.ЕМА_5_минут_h.Method)) 
                            + ")") 
                            + (" [" 
                            + (Источник1.Symbol + "]"))), ЕМА_5_минут, TSLab.Script.ListStyles.LINE, 2949881, TSLab.Script.LineStyles.SOLID, TSLab.Script.PaneSides.RIGHT);
            Главное_pane.UpdatePrecision(TSLab.Script.PaneSides.RIGHT, Источник1.Decimals);
        }
    }
}
