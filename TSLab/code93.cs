//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.1
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSLab.User
{
    using System;
    using TSLab.Script;
    
    
    public sealed class Script
    {
        
        private TSLab.Script.Handlers.Close Закрытие1_h = new TSLab.Script.Handlers.Close();
        
        private TSLab.Script.Handlers.Momentum MM_h = new TSLab.Script.Handlers.Momentum();
        
        private TSLab.Script.Handlers.Highest high_h = new TSLab.Script.Handlers.Highest();
        
        private TSLab.Script.Handlers.Lowest low_h = new TSLab.Script.Handlers.Lowest();
        
        public TSLab.Script.Optimization.OptimProperty MM_Period = new TSLab.Script.Optimization.OptimProperty(20, 10, 100, 5);
        
        public TSLab.Script.Optimization.OptimProperty high_Period = new TSLab.Script.Optimization.OptimProperty(20, 10, 100, 5);
        
        public void Execute(TSLab.Script.Handlers.IContext context, TSLab.Script.ISecurity Источник1)
        {
            // Initialize 'Закрытие1' item
            this.Закрытие1_h.Context = context;
            // Make 'Закрытие1' item data
            IList<double> Закрытие1 = context.GetData("Закрытие1", new string[] {
                "Источник1"
            }, delegate {
                try {
                    return this.Закрытие1_h.Execute(Источник1);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'Закрытие1\'. Индекс за пределам диапазона.");
                }

            });
            // Initialize 'MM' item
            this.MM_h.Period = this.MM_Period;
            // Make 'MM' item data
            IList<double> MM = context.GetData("MM", new string[] {
                this.MM_h.Period.ToString(), 
                "Источник1"
            }, delegate {
                try {
                    return this.MM_h.Execute(Закрытие1);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'MM\'. Индекс за пределам диапазона.");
                }

            });
            // Initialize 'high' item
            this.high_h.Context = context;
            this.high_h.Period = this.high_Period;
            // Make 'high' item data
            IList<double> high = context.GetData("high", new string[] {
                this.MM_h.Period.ToString(), 
                this.high_h.Period.ToString(), 
                "Источник1"
            }, delegate {
                try {
                    return this.high_h.Execute(MM);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'high\'. Индекс за пределам диапазона.");
                }

            });
            // Initialize 'low' item
            this.low_h.Context = context;
            this.low_h.Period = this.high_Period;
            // Make 'low' item data
            IList<double> low = context.GetData("low", new string[] {
                this.MM_h.Period.ToString(), 
                this.low_h.Period.ToString(), 
                "Источник1"
            }, delegate {
                try {
                    return this.low_h.Execute(MM);
                }
                catch (System.ArgumentOutOfRangeException ) {
                    throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'low\'. Индекс за пределам диапазона.");
                }

            });
            // Make 'ЛогичесФормула1' item data
            IList<bool> ЛогичесФормула1;
            try
            {
                int count = System.Math.Min(MM.Count, high.Count);
                bool[] list = new bool[count];
                if ((context.IsLastBarUsed == false))
                {
                    count--;
                }
                for (int i = 1; (i < count); i++)
                {
                    list[i] = MM[i]>high[i-1];
                }
                if ((count>0 
                            && (context.IsLastBarUsed == false)))
                {
                    list[count] = list[count-1];
                }
                ЛогичесФормула1 = list;
            }
            catch (System.ArgumentOutOfRangeException )
            {
                throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'ЛогичесФормула1\'. Индекс за пределам диапазона.");
            }
            // Make 'ЛогичесФормула2' item data
            IList<bool> ЛогичесФормула2;
            try
            {
                int count = System.Math.Min(MM.Count, low.Count);
                bool[] list = new bool[count];
                if ((context.IsLastBarUsed == false))
                {
                    count--;
                }
                for (int i = 1; (i < count); i++)
                {
                    list[i] = MM[i]<low[i-1];
                }
                if ((count>0 
                            && (context.IsLastBarUsed == false)))
                {
                    list[count] = list[count-1];
                }
                ЛогичесФормула2 = list;
            }
            catch (System.ArgumentOutOfRangeException )
            {
                throw new TSLab.Script.ScriptException("Ошибка при вычислении блока \'ЛогичесФормула2\'. Индекс за пределам диапазона.");
            }
            // =================================================
            // Panels
            // =================================================
            // Make 'Главная' pane
            TSLab.Script.IPane Главная_pane = context.CreatePane("Главная", 70D, false);
            Главная_pane.Visible = true;
            // Make 'ПанельГрафика1' pane
            TSLab.Script.IPane ПанельГрафика1_pane = context.CreatePane("ПанельГрафика1", 100D, false);
            ПанельГрафика1_pane.Visible = true;
            // =================================================
            // Handlers
            // =================================================
            TSLab.Script.IPosition S;
            TSLab.Script.IPosition L;
            // =================================================
            // Trading
            // =================================================
            int barsCount = Источник1.Bars.Count;
            if ((context.IsLastBarUsed == false))
            {
                barsCount--;
            }
            for (int i = 0; (i < barsCount); i++)
            {
                S = Источник1.Positions.GetLastActiveForSignal("S", i);
                L = Источник1.Positions.GetLastActiveForSignal("L", i);
                if ((S == null))
                {
                    if (ЛогичесФормула2[i])
                    {
                        if ((context.TradeFromBar <= i))
                        {
                            Источник1.Positions.SellAtMarket(i+1, 1D, "S");
                        }
                    }
                }
                else
                {
                    if ((S.EntryBarNum <= i))
                    {
                        if (ЛогичесФормула1[i])
                        {
                            S.CloseAtMarket(i+1, "SX");
                        }
                    }
                }
                if ((L == null))
                {
                    if (ЛогичесФормула1[i])
                    {
                        if ((context.TradeFromBar <= i))
                        {
                            Источник1.Positions.BuyAtMarket(i+1, 1D, "L");
                        }
                    }
                }
                else
                {
                    if ((L.EntryBarNum <= i))
                    {
                        if (ЛогичесФормула2[i])
                        {
                            L.CloseAtMarket(i+1, "LX");
                        }
                    }
                }
            }
            if (context.IsOptimization)
            {
                return;
            }
            // =================================================
            // Charts
            // =================================================
            // Make 'Источник1' chart
            TSLab.Script.IGraphList Главная_pane_Источник1_chart = Главная_pane.AddList(("Источник1" 
                            + (" [" 
                            + (Источник1.Symbol + "]"))), Источник1, TSLab.Script.CandleStyles.BAR_CANDLE, true, true, true, true, 255, TSLab.Script.PaneSides.RIGHT);
            Источник1.ConnectSecurityList(Главная_pane_Источник1_chart);
            Главная_pane_Источник1_chart.AlternativeColor = 255;
            Главная_pane.UpdatePrecision(TSLab.Script.PaneSides.RIGHT, Источник1.Decimals);
            // Make 'MM' chart
            TSLab.Script.IGraphList ПанельГрафика1_pane_MM_chart = ПанельГрафика1_pane.AddList(((("MM" 
                            + (" (" + this.MM_h.Period)) 
                            + ")") 
                            + (" [" 
                            + (Источник1.Symbol + "]"))), MM, TSLab.Script.ListStyles.LINE, 13565952, TSLab.Script.LineStyles.SOLID, TSLab.Script.PaneSides.RIGHT);
            ПанельГрафика1_pane.UpdatePrecision(TSLab.Script.PaneSides.RIGHT, Источник1.Decimals);
            // Make 'low' chart
            TSLab.Script.IGraphList ПанельГрафика1_pane_low_chart = ПанельГрафика1_pane.AddList(((("low" 
                            + (" (" + this.low_h.Period)) 
                            + ")") 
                            + (" [" 
                            + (Источник1.Symbol + "]"))), low, TSLab.Script.ListStyles.LINE, 198, TSLab.Script.LineStyles.SOLID, TSLab.Script.PaneSides.RIGHT);
            ПанельГрафика1_pane.UpdatePrecision(TSLab.Script.PaneSides.RIGHT, Источник1.Decimals);
            // Make 'high' chart
            TSLab.Script.IGraphList ПанельГрафика1_pane_high_chart = ПанельГрафика1_pane.AddList(((("high" 
                            + (" (" + this.high_h.Period)) 
                            + ")") 
                            + (" [" 
                            + (Источник1.Symbol + "]"))), high, TSLab.Script.ListStyles.LINE, 16199680, TSLab.Script.LineStyles.SOLID, TSLab.Script.PaneSides.RIGHT);
            ПанельГрафика1_pane.UpdatePrecision(TSLab.Script.PaneSides.RIGHT, Источник1.Decimals);
        }
    }
}
